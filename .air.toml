# .air.toml 配置文件
root = "."
tmp_dir = "tmp"

[build]
# 只需在文件更改時才全面重建
full_bin = ""
# 應用入口文件
cmd = "go build -o ./tmp/main ."
# 二進制執行文件
bin = "./tmp/main"
# 監控文件變動后延遲
delay = 1000
# 清理舊的二進制文件
clean_on_exit = true
# 發送信號給進程而不是殺死進程
send_interrupt = true

# 監控的文件類型
include_ext = ["go", "tpl", "tmpl", "html"]
# 排除的目錄
exclude_dir = ["assets", "tmp", "vendor", ".git", "node_modules", "deployments", "bin", "docs"]
# 排除的文件
exclude_file = []
# 排除以下正則表達式匹配的文件
exclude_regex = ["_test\\.go"]
# 排除未變更的文件
exclude_unchanged = true
# 按以下正則表達式匹配的文件的變更將被忽略
ignore_regex = []
# 是否跟踪符號鏈接
follow_symlink = true
# 自定義監控路徑
include_dir = []
# 使用 .airignore 忽略文件
ignore_path = [".airignore"]
# 啟動構建前執行的命令
pre_cmd = ["make swagger"]

[log]
# 顯示日誌時間
time = true
# 只在文件變更時顯示顏色
color = true

[color]
# 自定義各種狀態的顏色
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[screen]
# 清除終端屏幕
clear_on_rebuild = true
# 保持屏幕滾動
keep_scroll = true

# 微服務特定配置
# 認證服務配置
[auth-service]
cmd = "cp .env.auth-service .env && go run main.go"
delay = 1000
exclude_dir = ["tmp", "vendor", "testdata"]
exclude_file = []

# 遊戲服務配置
[game-service]
cmd = "cp .env.game-service .env && go run main.go"
delay = 1000
exclude_dir = ["tmp", "vendor", "testdata"]
exclude_file = []

# 其他設置
[misc]
# 在終端中刪除先前的輸出
clean_on_exit = true