// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth": {
            "post": {
                "description": "驗證用戶憑據並返回 JWT 令牌",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "用戶登入",
                "parameters": [
                    {
                        "description": "登入信息",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/interfaces.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登入成功",
                        "schema": {
                            "$ref": "#/definitions/interfaces.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "請求錯誤",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "登入失敗",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "使當前 JWT 令牌無效",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "用戶登出",
                "responses": {
                    "200": {
                        "description": "登出成功",
                        "schema": {
                            "$ref": "#/definitions/interfaces.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "未授權",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/token": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "驗證當前 JWT 令牌並返回對應的用戶信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "驗證令牌並返回用戶信息",
                "responses": {
                    "200": {
                        "description": "用戶信息",
                        "schema": {
                            "$ref": "#/definitions/handler.UserResponse"
                        }
                    },
                    "401": {
                        "description": "未授權",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "返回系統中的所有用戶",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "獲取所有用戶",
                "responses": {
                    "200": {
                        "description": "用戶列表",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/interfaces.UsersResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "未授權",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服務器錯誤",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "使用提供的信息創建新用戶",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "創建新用戶",
                "parameters": [
                    {
                        "description": "用戶信息",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateUserParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "創建成功",
                        "schema": {
                            "$ref": "#/definitions/interfaces.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "請求錯誤",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服務器錯誤",
                        "schema": {
                            "$ref": "#/definitions/interfaces.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "testdemo001"
                },
                "phone": {
                    "type": "string",
                    "example": "0987654321"
                }
            }
        },
        "interfaces.CreateUserResponse": {
            "type": "object",
            "properties": {
                "available_balance": {
                    "type": "number",
                    "example": 1000
                },
                "frozen_balance": {
                    "type": "number",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "testdemo001"
                },
                "phone": {
                    "type": "string",
                    "example": "0987654321"
                }
            }
        },
        "interfaces.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "interfaces.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "a12345678"
                },
                "phone": {
                    "type": "string",
                    "example": "0987654321"
                }
            }
        },
        "interfaces.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "0987654321"
                },
                "user": {
                    "$ref": "#/definitions/interfaces.User"
                }
            }
        },
        "interfaces.Pagination": {
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "has_previous": {
                    "type": "boolean"
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "interfaces.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "interfaces.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "testdemo001"
                },
                "phone": {
                    "type": "string",
                    "example": "0987654321"
                }
            }
        },
        "interfaces.UsersResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/interfaces.Pagination"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/interfaces.User"
                    }
                }
            }
        },
        "service.CreateUserParams": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Passontw Auth Service API",
	Description:      "Passontw Auth Service API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
